{
	"info": {
		"_postman_id": "f4c50968-3301-4f72-ae20-141d6a21edb9",
		"name": "API Tests",
		"description": "# Introduction\nWhat does your API do?\n\n# Overview\nThings that the developers should know about\n\n# Authentication\nWhat is the preferred way of using the API?\n\n# Error Codes\nWhat errors and status codes can a user expect?\n\n# Rate limit\nIs there a limit to the number of requests a user can send?",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "API Status",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",()=> {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"postman.setNextRequest(\"List of books\");\r",
							"\r",
							"const response = pm.response.json();\r",
							"console.log(response.status);\r",
							"console.log(response['status']);\r",
							"\r",
							"pm.test(\"The Status is OK\", ()=> {\r",
							"    pm.expect(response.status).to.eql(\"OK\");\r",
							"});\r",
							"postman.setNextRequest(\"List of books\");\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/status",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"status"
					]
				}
			},
			"response": [
				{
					"name": "Example1",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://f158a315-494d-44fe-b26f-065643e6ef26.mock.pstmn.io",
							"protocol": "https",
							"host": [
								"f158a315-494d-44fe-b26f-065643e6ef26",
								"mock",
								"pstmn",
								"io"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Sun, 10 Oct 2021 10:47:56 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "15"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "x-powered-by",
							"value": "Express"
						},
						{
							"key": "etag",
							"value": "W/\"f-v/Y1JusChTxrQUzPtNAKycooOTA\""
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": [\n        { \n            \"name\" : \"Jacke\",\n            \"vorname\" : \"Jakev\",\n            \"age\" : 29\n\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "Register API Clients",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"console.log(JSON.stringify({ x: 5, y: 6 }));\r",
							"\r",
							"console.log(JSON.stringify([new Number(3), new String('false'), new Boolean(false)]));\r",
							"\r",
							"console.log(JSON.stringify(new Date(2021, 9, 13, 13, 33, 5)));\r",
							"\r",
							"const date = JSON.stringify(new Date(2021, 9, 13, 13, 33, 5));\r",
							"\r",
							"pm.globals.set(\"newDate\", date);\r",
							"\r",
							"/*date = pm.globals.get(\"newDate\");*/"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"clientName\": \"Racmaghiii\",\r\n   \"clientEmail\": \"racmaghiii@example.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api-clients",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api-clients"
					],
					"query": [
						{
							"key": "type",
							"value": "fiction",
							"disabled": true
						},
						{
							"key": "type",
							"value": "non-fiction",
							"disabled": true
						},
						{
							"key": "limit",
							"value": "1",
							"disabled": true
						},
						{
							"key": "limit",
							"value": "3",
							"disabled": true
						},
						{
							"key": "limit",
							"value": "20",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "List of books",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let min = 234545;\r",
							"let max = 5565756;\r",
							"// for generating random number \r",
							"function randomNumber(min, max) { \r",
							"    return Math.random() * (max - min) + min;\r",
							"} \r",
							"console.log(Math.round(randomNumber(min, max)));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",  () =>{\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const response = pm.response.json();\r",
							"\r",
							"const NonFictionBooks = response.filter((book)=> book.available ===true);\r",
							"\r",
							"const book = NonFictionBooks[0];\r",
							"\r",
							"if (book){\r",
							"pm.globals.set(\"bookId\", book.id);\r",
							"}\r",
							"pm.test(\"Book found\", ()=> {\r",
							"pm.expect(book).to.be.an(\"object\");\r",
							"pm.expect(book.available).to.eql(true);\r",
							"pm.expect(book.available).to.be.true;\r",
							"pm.expect(book.type).to.eql(\"fiction\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/books",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"books"
					],
					"query": [
						{
							"key": "type",
							"value": "fiction",
							"disabled": true
						},
						{
							"key": "type",
							"value": "non-fiction",
							"disabled": true
						},
						{
							"key": "limit",
							"value": "1",
							"disabled": true
						},
						{
							"key": "limit",
							"value": "3",
							"disabled": true
						},
						{
							"key": "limit",
							"value": "20",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get single book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"const response = pm.response.json();\r",
							"\r",
							"pm.test(\"Is in Stock\", () => {\r",
							"    pm.expect(response[\"current-stock\"]).to.be.above(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/books/:bookId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"books",
						":bookId"
					],
					"query": [
						{
							"key": "type",
							"value": "fiction",
							"disabled": true
						},
						{
							"key": "type",
							"value": "non-fiction",
							"disabled": true
						},
						{
							"key": "limit",
							"value": "1",
							"disabled": true
						},
						{
							"key": "limit",
							"value": "3",
							"disabled": true
						},
						{
							"key": "limit",
							"value": "20",
							"disabled": true
						}
					],
					"variable": [
						{
							"key": "bookId",
							"value": "{{bookId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Order book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"const response = pm.response.json();\r",
							"pm.globals.set(\"OrderID\", response.orderId);\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"bookId\": {{bookId}},\r\n    \"customerName\": \"{{$randomFullName}}\" \r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/orders",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders"
					],
					"query": [
						{
							"key": "type",
							"value": "fiction",
							"disabled": true
						},
						{
							"key": "type",
							"value": "non-fiction",
							"disabled": true
						},
						{
							"key": "limit",
							"value": "1",
							"disabled": true
						},
						{
							"key": "limit",
							"value": "3",
							"disabled": true
						},
						{
							"key": "limit",
							"value": "20",
							"disabled": true
						}
					]
				}
			},
			"response": [
				{
					"name": "Example_Order book",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"bookId\": {{bookId}},\r\n    \"customerName\": \"{{$randomFullName}}\" \r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://34818110-d859-4e6c-b951-8890855a8ec3.mock.pstmn.io",
							"protocol": "https",
							"host": [
								"34818110-d859-4e6c-b951-8890855a8ec3",
								"mock",
								"pstmn",
								"io"
							],
							"query": [
								{
									"key": "type",
									"value": "fiction",
									"disabled": true
								},
								{
									"key": "type",
									"value": "non-fiction",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "1",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "3",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "20",
									"disabled": true
								}
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Sun, 10 Oct 2021 12:02:06 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "50"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "x-powered-by",
							"value": "Express"
						},
						{
							"key": "etag",
							"value": "W/\"32-H3o8NUror7ZU8WD9jT/3SfkHgrs\""
						}
					],
					"cookie": [],
					"body": "{\n    \"created\": true,\n    \"orderId\": \"3hv7KJhzwIIfdGf26ec5v\"\n}"
				}
			]
		},
		{
			"name": "Order book Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"const response = pm.response.json();\r",
							"pm.globals.set(\"OrderID\", response.orderId);\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"bookId\": {{bookId}},\r\n    \"customerName\": \"{{$randomFullName}}\" \r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://34818110-d859-4e6c-b951-8890855a8ec3.mock.pstmn.io",
					"protocol": "https",
					"host": [
						"34818110-d859-4e6c-b951-8890855a8ec3",
						"mock",
						"pstmn",
						"io"
					],
					"query": [
						{
							"key": "type",
							"value": "fiction",
							"disabled": true
						},
						{
							"key": "type",
							"value": "non-fiction",
							"disabled": true
						},
						{
							"key": "limit",
							"value": "1",
							"disabled": true
						},
						{
							"key": "limit",
							"value": "3",
							"disabled": true
						},
						{
							"key": "limit",
							"value": "20",
							"disabled": true
						}
					]
				}
			},
			"response": [
				{
					"name": "Example_Order book",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"bookId\": {{bookId}},\r\n    \"customerName\": \"{{$randomFullName}}\" \r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://34818110-d859-4e6c-b951-8890855a8ec3.mock.pstmn.io",
							"protocol": "https",
							"host": [
								"34818110-d859-4e6c-b951-8890855a8ec3",
								"mock",
								"pstmn",
								"io"
							],
							"query": [
								{
									"key": "type",
									"value": "fiction",
									"disabled": true
								},
								{
									"key": "type",
									"value": "non-fiction",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "1",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "3",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "20",
									"disabled": true
								}
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Sun, 10 Oct 2021 12:02:06 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "50"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "x-powered-by",
							"value": "Express"
						},
						{
							"key": "etag",
							"value": "W/\"32-H3o8NUror7ZU8WD9jT/3SfkHgrs\""
						}
					],
					"cookie": [],
					"body": "{\n    \"created\": false,\n    \"orderId\": \"3hv7KJhzwIIfdGf26ec5v\"\n}"
				}
			]
		},
		{
			"name": "Get all book orders",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();\r",
							"\r",
							"//pm.test(\"Status code is 200\",\":\" + \"OrderID\", function () {\r",
							"    //pm.response.to.have.status(200);\r",
							"//});\r",
							"console.log(response[0].id);\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.globals.set(\"ID\", response[0].id);\r",
							"//pm.globals.set(\"variable_key\", \"variable_value\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/orders",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders"
					],
					"query": [
						{
							"key": "type",
							"value": "fiction",
							"disabled": true
						},
						{
							"key": "type",
							"value": "non-fiction",
							"disabled": true
						},
						{
							"key": "limit",
							"value": "1",
							"disabled": true
						},
						{
							"key": "limit",
							"value": "3",
							"disabled": true
						},
						{
							"key": "limit",
							"value": "20",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get an order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/orders/:orderId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders",
						":orderId"
					],
					"query": [
						{
							"key": "type",
							"value": "fiction",
							"disabled": true
						},
						{
							"key": "type",
							"value": "non-fiction",
							"disabled": true
						},
						{
							"key": "limit",
							"value": "1",
							"disabled": true
						},
						{
							"key": "limit",
							"value": "3",
							"disabled": true
						},
						{
							"key": "limit",
							"value": "20",
							"disabled": true
						}
					],
					"variable": [
						{
							"key": "orderId",
							"value": "{{OrderID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update an order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"customerName\": \"John {{$randomLastName}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/orders/:orderId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders",
						":orderId"
					],
					"query": [
						{
							"key": "type",
							"value": "fiction",
							"disabled": true
						},
						{
							"key": "type",
							"value": "non-fiction",
							"disabled": true
						},
						{
							"key": "limit",
							"value": "1",
							"disabled": true
						},
						{
							"key": "limit",
							"value": "3",
							"disabled": true
						},
						{
							"key": "limit",
							"value": "20",
							"disabled": true
						}
					],
					"variable": [
						{
							"key": "orderId",
							"value": "{{OrderID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete an order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"postman.setNextRequest(null);\r",
							"\r",
							"let min = 234545;\r",
							"let max = 5565756;\r",
							"// for generating random number \r",
							"function randomNumber(min, max) { \r",
							"    return Math.random() * (max - min) + min;\r",
							"} \r",
							"console.log(Math.round(randomNumber(min, max)));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/orders/:orderId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders",
						":orderId"
					],
					"query": [
						{
							"key": "type",
							"value": "fiction",
							"disabled": true
						},
						{
							"key": "type",
							"value": "non-fiction",
							"disabled": true
						},
						{
							"key": "limit",
							"value": "1",
							"disabled": true
						},
						{
							"key": "limit",
							"value": "3",
							"disabled": true
						},
						{
							"key": "limit",
							"value": "20",
							"disabled": true
						}
					],
					"variable": [
						{
							"key": "orderId",
							"value": "{{OrderID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "https://cc2ae1c2-f836-4bea-a401-93d242d017ae.mock.pstmn.io/get",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://cc2ae1c2-f836-4bea-a401-93d242d017ae.mock.pstmn.io/get",
					"protocol": "https",
					"host": [
						"cc2ae1c2-f836-4bea-a401-93d242d017ae",
						"mock",
						"pstmn",
						"io"
					],
					"path": [
						"get"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://simple-books-api.glitch.me"
		},
		{
			"key": "accessToken",
			"value": "a1a027a75b84828cbff53d029ad22957fe40529e6fbda6010642057f236e0804"
		},
		{
			"key": "endpoint",
			"value": ""
		},
		{
			"key": "clientName",
			"value": ""
		},
		{
			"key": "clientEmail",
			"value": "exmple@example.com"
		}
	]
}